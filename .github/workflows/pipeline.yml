name: Terraform AWS Workflow

on:
  workflow_call:
  workflow_dispatch:
    inputs:
      tfpath:
        description: 'TF File Path'     
        required: false
        default: 'iam-s3-cloudfront'
  push:
    branches: ['*']
  pull_request:
    branches: ['*']

jobs:
  tf_plan:
    name: Terraform Plan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout tf code in runner environment
      uses: actions/checkout@v3.5.2

    - name: Configure AWS Credentials Action For GitHub Actions
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2

    - name: Setup Terraform CLI
      uses: hashicorp/setup-terraform@v2.0.2

    - name: Terraform init and validate
      run: |
        echo `pwd`
        echo "tfpath ${{ github.event.inputs.tfpath || 'iam-s3-cloudfront' }}"
        echo "** Running Terraform Init**"
        terraform init
        
        echo "** Running Terraform Validate**"
        terraform validate
      working-directory: ${{ github.event.inputs.tfpath || 'iam-s3-cloudfront' }}

    - name: Terraform Plan
      run: |
        echo `pwd`
        echo "tfpath ${{ github.event.inputs.tfpath || 'iam-s3-cloudfront' }}"        
        echo "** Running Terraform Plan**"
        terraform plan -out=tfplan
      working-directory: ${{ github.event.inputs.tfpath || 'iam-s3-cloudfront' }}

    - name: Upload Plan Output
      uses: actions/upload-artifact@v3
      with:
        name: tfplan
        path: ${{ github.event.inputs.tfpath || 'iam-s3-cloudfront' }}/tfplan

  tf_apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: tf_plan

    steps:
    - name: Checkout tf code in runner environment
      uses: actions/checkout@v3.5.2

    - name: Download Plan Output
      uses: actions/download-artifact@v3
      with:
        name: tfplan
        path: ${{ github.event.inputs.tfpath || 'iam-s3-cloudfront' }}

    - name: Configure AWS Credentials Action For GitHub Actions
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2

    - name: Setup Terraform CLI
      uses: hashicorp/setup-terraform@v2.0.2

    - name: Terraform Apply
      run: |
        echo `pwd`
        ls
        cat tfplan
        echo "tfpath ${{ github.event.inputs.tfpath || 'iam-s3-cloudfront' }}"        
        echo "** Running Terraform Apply**"
        terraform apply tfplan
      working-directory: ${{ github.event.inputs.tfpath || 'iam-s3-cloudfront' }}

  tf_destroy:
    name: Terraform Destroy
    runs-on: ubuntu-latest
    needs: tf_apply

    steps:
    - name: Checkout tf code in runner environment
      uses: actions/checkout@v3.5.2

    - name: Configure AWS Credentials Action For GitHub Actions
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2

    - name: Setup Terraform CLI
      uses: hashicorp/setup-terraform@v2.0.2

    - name: Terraform Destroy
      run: |
        echo "** Running Terraform Destroy**"
        terraform destroy
      working-directory: ${{ github.event.inputs.tfpath || 'iam-s3-cloudfront' }}